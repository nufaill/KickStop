<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Kickstop - Sign Up</title>
  <style>
    * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* Existing container styling */
.container {
  position: relative;
  display: flex;
  width: 90%;
  max-width: 1000px;
  height: 80vh;
  box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.2);
  border-radius: 15px;
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.8);
}

/* Adjusted body styling for smooth gradients */
body {
  position: relative;
  font-family: Arial, sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  overflow: hidden;
  transition: background 2s ease;
}


.container {
  display: flex;
  width: 90%;
  max-width: 1000px;
  height: 80vh;
  box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.2);
  border-radius: 15px;
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.8); /* Slight background opacity for contrast */
}

.left-side {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
}

/* Overlay container */
.overlay {
  position: relative;
  width: 100%;
  height: 100%;
}

/* "Kickstop" Text Overlay */
.website-name {
  position: absolute;
  top: 20px;
  left: 20px;
  font-size: 3rem;
  font-weight: bold;
  color: #222;
  z-index: 2;
}

/* Shoe Image Styling */
.shoe-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}
/* Right Side - signup Form */
.right-side {
  flex: 1;
  padding: 40px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  background-color: white;
  border-radius: 0 15px 15px 0;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
}

.right-side h2 {
  margin-bottom: 1.5rem;
  font-size: 2rem;
  color: #333;
  text-align: center;
}

.input-container {
  margin-bottom: 1.2rem;
}

.input-container label {
  display: block;
  color: #666;
  margin-bottom: 0.3rem;
  font-size: 0.9rem;
}

.input-container input {
  width: 100%;
  padding: 0.8rem;
  border-radius: 5px;
  border: 2px solid #ddd;
  outline: none;
  transition: border-color 0.3s ease;
}

.input-container input:focus {
  border-color: #4caf50;
  box-shadow: 0 0 10px rgba(76, 175, 80, 0.3);
}

.signup-btn {
  width: 100%;
  padding: 0.8rem;
  border: none;
  border-radius: 5px;
  background: linear-gradient(45deg, hsl(128, 23%, 31%), hsl(128, 23%, 38%));
  color: #fff;
  font-weight: bold;
  cursor: pointer;
  transition: transform 0.2s ease, background-color 0.3s ease;
}

.signup-btn:hover {
  transform: scale(1.05);
}
.login-link {
  margin-top: 20px;
  font-size: 0.9rem;
  text-align: center;
  color: #555;
}

.login-link a {
  color: #007BFF;
  text-decoration: none;
  font-weight: bold;
  transition: color 0.3s ease, text-decoration 0.3s ease;
}

.login-link a:hover {
  color: #0056b3;
  text-decoration: underline;
}
.error-message {
      color: red;
      font-size: 0.85rem;
    }
    @media (max-width: 768px) {
  .container {
    flex-direction: column;
    height: auto;
    overflow-y: auto; 
    max-height: 100vh; 
  }
  .left-side, .right-side {
    flex: unset;
    width: 100%;
    padding: 20px;
  }
  .shoe-image {
    border-radius: 0; 
  }
}


  </style>
</head>
<body>
  <div class="container">
    <!-- Left Side -->
    <div class="left-side">
        <div class="overlay">
            <div class="website-name">Kickstop</div>
            <img src="/evara-frontend/assets/imgs/new_images/image.png" alt="Shoe Image" class="shoe-image">
          </div>
    </div>

    <!-- Right Side - signup Form -->
    <div class="right-side">
      <h2>Sign Up</h2>
      <form id="signupForm" method="post" action="/signup" onsubmit="return validateForm();">
        <div class="input-container">
          <label for="full-name">Full Name</label>
          <input type="text" id="full-name" name="fullname" aria-describedby="usernameError" aria-label="Full Name">
          <span id="usernameError" class="error-message"></span>
        </div>
        <div class="input-container">
          <label for="email">Email Address</label>
          <input type="email" id="email" name="email">
          <span id="emailError" class="error-message"></span>
        </div>
        <div class="input-container">
          <label for="password">Password</label>
          <input type="password" id="password" name="password">
          <span id="passwordError" class="error-message"></span>
        </div>
        <div class="input-container">
          <label for="confirm-password">Confirm Password</label>
          <input type="password" id="confirm-password" name="cpassword">
          <span id="cpasswordError" class="error-message"></span>
        </div>
        <button type="submit" class="signup-btn">Create Account</button>
        <div class="mt-2px">
          <p>or sign up with</p>
        </div>
        <div class="social-btns">
          <a href="/auth/google" class="btn btn-outline-danger">
            <img
              src="/evara-frontend/assets/imgs/new_images/googlelogo.png"
              alt="Google Logo"
              style="width: 24px; height: 24px"
            />
          </a>
        </div>
      </form>
      <div class="login-link">
        Already have an account? <a href="/login">Login here</a>
    </div>
    </div>
  </div>
  <script>

function validateForm() {
    let isValid = true;
    const username = document.getElementById('full-name').value.trim();
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value.trim();
    const cpassword = document.getElementById('confirm-password').value.trim();
    const terms = document.getElementById('terms')?.checked; // Optional check if terms exist

    // Email pattern validation
    const emailPattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;

    // Clear previous errors
    document.getElementById('usernameError').textContent = '';
    document.getElementById('emailError').textContent = '';
    document.getElementById('passwordError').textContent = '';
    document.getElementById('cpasswordError').textContent = '';
    if (document.getElementById('termsError')) {
        document.getElementById('termsError').textContent = '';
    }

    // Username validation
    if (!username) {
        document.getElementById('usernameError').textContent = 'Full name is required';
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(username)) {
        document.getElementById('usernameError').textContent = 'Full name can only contain letters';
        isValid = false;
    } else if (username.length < 2) {
        document.getElementById('usernameError').textContent = 'Full name must be at least 2 characters long';
        isValid = false;
    } else if (username.length > 30) {
        document.getElementById('usernameError').textContent = 'Full name cannot exceed 30 characters';
        isValid = false;
    }

    // Email validation
    if (!email || !emailPattern.test(email)) {
        document.getElementById('emailError').textContent = 'Please enter a valid email';
        isValid = false;
    }

    // Password validation
    if (!password) {
        document.getElementById('passwordError').textContent = 'Password is required';
        isValid = false;
    } else {
        const minLength = 6;
        const hasUpperCase = /[A-Z]/.test(password);
        const hasLowerCase = /[a-z]/.test(password);
        const hasNumbers = /\d/.test(password);
        const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);

        let strengthErrors = [];

        if (password.length < minLength) strengthErrors.push('at least 8 characters');
        if (!hasUpperCase) strengthErrors.push('an uppercase letter');
        if (!hasLowerCase) strengthErrors.push('a lowercase letter');
        if (!hasNumbers) strengthErrors.push('a number');
        if (!hasSpecialChar) strengthErrors.push('a special character');

        if (strengthErrors.length > 0) {
            document.getElementById('passwordError').textContent =
                `Password must contain ${strengthErrors.join(', ')}`;
            isValid = false;
        }
    }

    // Confirm Password validation
    if (!cpassword) {
        document.getElementById('cpasswordError').textContent = 'Please confirm your password';
        isValid = false;
    } else if (password !== cpassword) {
        document.getElementById('cpasswordError').textContent = 'Passwords do not match';
        isValid = false;
    }

    // Terms checkbox validation (if added)
    if (terms !== undefined && !terms) {
        document.getElementById('termsError').textContent = 'You must agree to the terms and policy';
        isValid = false;
    }

    return isValid;
}


  document.addEventListener("DOMContentLoaded", () => {
    const container = document.querySelector("body");
  
    const gradients = [
        "linear-gradient(135deg, #96e6a1 10%, #42742d 90%)",     
        "linear-gradient(135deg, #d4fc79 20%, #a8e063 80%)",      
        "linear-gradient(135deg, #42742d 15%, #7dcb59 85%)",      
        "linear-gradient(135deg, #d4fc79 10%, #3cb371 90%)",      
        "linear-gradient(135deg, #d4fc79 25%, #a8e063 75%)",      
        "linear-gradient(135deg, #d4fc79 20%, #7dcb59 80%)",      
        "linear-gradient(135deg, #96e6a1 10%, #3cb371 50%, #7dcb59 90%)", 
        "linear-gradient(135deg, #d4fc79 20%, #96e6a1 80%)",      
        "linear-gradient(135deg, #a8e063 15%, #42742d 85%)",      
        "linear-gradient(135deg, #d4fc79 10%, #42742d 90%)"      
      ];
      
      
      
  
    let gradientIndex = 0;
  
    setInterval(() => {
      container.style.background = gradients[gradientIndex];
      container.style.transition = "background 1s ease"; 
      gradientIndex = (gradientIndex + 1) % gradients.length; 
    }, 4000);

    
  });
  

  </script>

</body>
</html>
