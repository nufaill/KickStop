<%- include('../layouts/user/header') %>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<style>
    .search-container {
    display: flex;
    align-items: center;
    gap: 10px;
}

#search-input {
    flex-grow: 1;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.search-container button {
    padding: 8px 15px;
    background-color: #701010;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}
</style>
<main class="main">
    <section class="product-tabs section-padding position-relative wow fadeIn animated">
        <div class="container">
            <h3 class="section-title mb-20"><span>All</span> Products</h3>
            <div class="search-container">
                <input type="text" id="search-input" class="form-control" placeholder="Search products..." onkeyup="handleSearch(event)">
                <button class="btn btn" onclick="performSearch()">Search</button>
            </div>

            <div class="tab-header">
                <div class="sorting-container">
                    <label for="sort-by" class="sort-label">Sort by:</label>
                    <select id="sort-by" class="sort-select" onchange="handleSortChange()">
                        <option value="default">Default</option>
                        <option value="popularity">Popularity</option>
                        <option value="price-low-high">Price: Low to High</option>
                        <option value="price-high-low">Price: High to Low</option>
                        <option value="rating">Average Rating</option>
                        <option value="new-arrivals">New Arrivals</option>
                        <option value="alphabetical-a-z">Alphabetical (A-Z)</option>
                        <option value="alphabetical-z-a">Alphabetical (Z-A)</option>
                    </select>
                </div>
                <div>
                    <select id="cat-filter" class="sort-select" onchange="handleCategoryChange()">
                        <option value="all-categories">All Categories</option>
                        <% for(let i=0; i < categories.length; i++) { %>
                            <option value="<%= categories[i]._id %>">
                                <%= categories[i].name %>
                            </option>
                        <% } %>
                    </select>
                </div>
            </div><br><br>

            <div class="tab-content wow fadeIn animated" id="myTabContent">
                <div class="row product-grid-4" id="products-container">
                    <% for(let i=0; i < products.length; i++) { %>
                        <div class="col-lg-3 col-md-4 col-12 col-sm-6">
                            <div class="product-cart-wrap mb-30">
                                <div class="product-img-action-wrap">
                                    <div class="product-img product-img-zoom">
                                        <a href="/product-details?productId=<%=products[i]._id%>">
                                            <img class="default-img"
                                                src="uploads/re-image/<%=products[i].productImage[0]%>" alt="">
                                            <img class="hover-img"
                                                src="uploads/re-image/<%=products[i].productImage[0]%>" alt="">
                                        </a>
                                    </div>
                                    <div class="product-action-1">
                                        <a aria-label="Quick view" class="action-btn hover-up"
                                            data-bs-toggle="modal" data-bs-target="#quickViewModal"><i
                                                class="fi-rs-eye"></i></a>
                                         <a aria-label="Add To Wishlist" class="action-btn hover-up"
                                            onclick="addToWishlist('<%= products[i]._id %>')"><i class="fi-rs-heart"></i></a>
                                        <a aria-label="Compare" class="action-btn hover-up"
                                            href="#"><i class="fi-rs-shuffle"></i></a>
                                    </div>
                                    <div class="product-badges product-badges-position product-badges-mrg">
                                        <span class="hot">Hot</span>
                                    </div>
                                </div>
                                <div class="product-content-wrap">
                                    <div class="product-category">
                                    </div>
                                    <h2><a href="/product-details?productId=<%=products[i]._id%>">
                                            <%=products[i].productName%>
                                        </a></h2>
                                    <div class="rating-result" title="90%">
                                        <span>
                                            <span>90%</span>
                                        </span>
                                    </div>
                                    <div class="product-price">
                                        <span>₹<%=products[i].salePrice.toLocaleString()%> </span>
                                        <span class="old-price">₹<%=products[i].regularPrice.toLocaleString()%>
                                        </span>
                                    </div>
                                    <div class="product-action-1 show">
                                        <a 
                                            aria-label="Add To Cart" class="action-btn hover-up" onclick="addToCart('<%= products[i]._id %>')">
                                            <i class="fi-rs-shopping-bag-add"></i>
                                        </a>
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
        <!-- Pagination Component -->
            <div class="pagination-area mt-15 mb-50 container">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-start">
                        <!-- Previous Button -->
                        <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                            <a class="page-link d-flex justify-content-center align-items-center" 
                            href="<%= currentPage === 1 ? '#' : `?page=${currentPage - 1}` %>"
                            <%= currentPage === 1 ? 'aria-disabled="true"' : '' %>>
                                <span class="material-icons">chevron_left</span>
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        <% 
                        let startPage = Math.max(1, currentPage - 2);
                        let endPage = Math.min(totalPages, startPage + 4);
                        
                        if (endPage - startPage < 4) {
                            startPage = Math.max(1, endPage - 4);
                        }
                        
                        if (startPage > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=1">1</a>
                            </li>
                            <% if (startPage > 2) { %>
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            <% } %>
                        <% } %>

                        <% for(let i = startPage; i <= endPage; i++) { %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>

                        <% if (endPage < totalPages) { %>
                            <% if (endPage < totalPages - 1) { %>
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            <% } %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= totalPages %>"><%= totalPages %></a>
                            </li>
                        <% } %>

                        <!-- Next Button -->
                        <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                            <a class="page-link d-flex justify-content-center align-items-center" 
                            href="<%= currentPage === totalPages ? '#' : `?page=${currentPage + 1}` %>"
                            <%= currentPage === totalPages ? 'aria-disabled="true"' : '' %>>
                                <span class="material-icons">chevron_right</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
    </section>
</main>

<script>
    async function addToWishlist(id) {
    try {
        const response = await fetch('/add-to-wishlist', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId: id })
        });
        const data = await response.json();
        
        if (data.success) {
            Swal.fire({
                position: "top-end", 
                icon: "success",
                title: "Added to Wishlist",
                showConfirmButton: false,
                timer: 3000, 
                timerProgressBar: true,
                toast: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });
        } else {
            Swal.fire({
                position: "top-end",
                icon: "info",
                title: data.message,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                toast: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });
        }
    } catch (error) {
        console.error('Error adding to wishlist:', error.message);
    }
}
async function addToCart(id) {
            try {
                const response = await fetch(`/add-to-cart/?id=${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });
                const data = await response.json();
                if (data.success) {
            Swal.fire({
                position: "top-end", 
                icon: "success",
                title: "Added to Cart",
                showConfirmButton: false,
                timer: 3000, 
                timerProgressBar: true,
                toast: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });
        } else if (data.alreadyInCart) {
            Swal.fire({
                position: "top-end", 
                icon: "info",
                title: "Product Already in Cart",
                showConfirmButton: false,
                timer: 3000, 
                timerProgressBar: true,
                toast: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });
        } else {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: data.message,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                toast: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });
        }
            } catch (error) {
                console.error('Error adding to cart:', error.message);
            }
        }


        let currentFilters = {
    search: '',
    category: 'all-categories',
    sort: 'default',
    page: 1
};

function updateURL() {
    const params = new URLSearchParams();
    Object.entries(currentFilters).forEach(([key, value]) => {
        if (value && value !== 'all-categories') { // Only add non-default values
            params.set(key, value);
        }
    });
    const newUrl = `${window.location.pathname}${params.toString() ? '?' + params.toString() : ''}`;
    window.history.replaceState({}, '', newUrl);
}
function loadFiltersFromURL() {
    const params = new URLSearchParams(window.location.search);
    const urlCategory = params.get('category');
    currentFilters = {
        search: params.get('search') || '',
        category: urlCategory || 'all-categories',
        sort: params.get('sort') || 'default',
        page: parseInt(params.get('page')) || 1
    };
    
    document.getElementById('search-input').value = currentFilters.search;
    document.getElementById('cat-filter').value = currentFilters.category;
    document.getElementById('sort-by').value = currentFilters.sort;
}

async function fetchFilteredProducts() {
    try {
        
        
        const response = await fetch('/sort-and-search', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(currentFilters)
        });

        const data = await response.json();
        
        if (!response.ok) {
            throw new Error(data.error || 'Failed to fetch products');
        }
        
        if (data.success) {
            updateProductList(data.products);
            updatePagination(data.pagination);
            updateURL();
            
            // Update the category select to reflect current selection
            const categorySelect = document.getElementById('cat-filter');
            if (categorySelect) {
                categorySelect.value = currentFilters.category;
            }
        } else {
            throw new Error(data.error || 'Failed to fetch products');
        }
    } catch (error) {
        console.error('Error:', error);
        showError(error.message);
        throw error; // Re-throw to be caught by the calling function
    }
}


function handleSearch(event) {
    if (event.key === 'Enter') {
        performSearch();
    }
}

function performSearch() {
    currentFilters.search = document.getElementById('search-input').value.trim();
    currentFilters.page = 1; 
    fetchFilteredProducts();
}

function handleSortChange() {
    currentFilters.sort = document.getElementById('sort-by').value;
    currentFilters.page = 1; 
    fetchFilteredProducts();
}

function handleCategoryChange() {
    const categorySelect = document.getElementById('cat-filter');
    const selectedCategory = categorySelect.value;
    
    
    currentFilters.category = selectedCategory;
    currentFilters.page = 1;
    
    // Add error handling for the fetch call
    fetchFilteredProducts().catch(error => {
        console.error('Error in category change:', error);
        showError('Failed to filter by category. Please try again.');
    });
}
function handlePageChange(page) {
    currentFilters.page = page;
    fetchFilteredProducts();
}

function updateProductList(products) {
    const productsContainer = document.getElementById('products-container');
    if (!products || products.length === 0) {
        productsContainer.innerHTML = '<div class="col-12 text-center"><p>No products found.</p></div>';
        return;
    }

    productsContainer.innerHTML = products.map(product => `
        <div class="col-lg-3 col-md-4 col-12 col-sm-6">
            <div class="product-cart-wrap mb-30">
                <div class="product-img-action-wrap">
                    <div class="product-img product-img-zoom">
                        <a href="/product-details?productId=${product._id}">
                            <img class="default-img" src="uploads/re-image/${product.productImage[0]}" alt="">
                            <img class="hover-img" src="uploads/re-image/${product.productImage[0]}" alt="">
                        </a>
                    </div>
                    <div class="product-action-1">
                        <a aria-label="Quick view" class="action-btn hover-up" data-bs-toggle="modal" data-bs-target="#quickViewModal">
                            <i class="fi-rs-eye"></i>
                        </a>
                        <a aria-label="Add To Wishlist" class="action-btn hover-up" onclick="addToWishlist('${product._id}')">
                            <i class="fi-rs-heart"></i>
                        </a>
                        <a aria-label="Compare" class="action-btn hover-up" href="#">
                            <i class="fi-rs-shuffle"></i>
                        </a>
                    </div>
                    <div class="product-badges product-badges-position product-badges-mrg">
                        <span class="hot">Hot</span>
                    </div>
                </div>
                <div class="product-content-wrap">
                    <h2><a href="/product-details?productId=${product._id}">${product.productName}</a></h2>
                    <div class="product-price">
                        <span>₹${product.salePrice.toLocaleString()}</span>
                        <span class="old-price">₹${product.regularPrice.toLocaleString()}</span>
                    </div>
                    <div class="product-action-1 show">
                        <a aria-label="Add To Cart" class="action-btn hover-up" onclick="addToCart('${product._id}')">
                            <i class="fi-rs-shopping-bag-add"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    `).join('');
}

function updatePagination({ currentPage, totalPages }) {
    const paginationContainer = document.querySelector('.pagination');
    if (!paginationContainer) return;

    let paginationHTML = '';
    
    
    paginationHTML += `
        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" onclick="handlePageChange(${currentPage - 1})" ${currentPage === 1 ? 'aria-disabled="true"' : ''}>
                <span class="material-icons">chevron_left</span>
            </a>
        </li>
    `;

    let startPage = Math.max(1, currentPage - 2);
    let endPage = Math.min(totalPages, startPage + 4);
    if (endPage - startPage < 4) {
        startPage = Math.max(1, endPage - 4);
    }

    if (startPage > 1) {
        paginationHTML += `
            <li class="page-item"><a class="page-link" onclick="handlePageChange(1)">1</a></li>
            ${startPage > 2 ? '<li class="page-item disabled"><span class="page-link">...</span></li>' : ''}
        `;
    }

    for (let i = startPage; i <= endPage; i++) {
        paginationHTML += `
            <li class="page-item ${i === currentPage ? 'active' : ''}">
                <a class="page-link" onclick="handlePageChange(${i})">${i}</a>
            </li>
        `;
    }

    if (endPage < totalPages) {
        paginationHTML += `
            ${endPage < totalPages - 1 ? '<li class="page-item disabled"><span class="page-link">...</span></li>' : ''}
            <li class="page-item"><a class="page-link" onclick="handlePageChange(${totalPages})">${totalPages}</a></li>
        `;
    }

    paginationHTML += `
        <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
            <a class="page-link" onclick="handlePageChange(${currentPage + 1})" ${currentPage === totalPages ? 'aria-disabled="true"' : ''}>
                <span class="material-icons">chevron_right</span>
            </a>
        </li>
    `;

    paginationContainer.innerHTML = paginationHTML;
}

function showError(message) {
    Swal.fire({
        position: "top-end",
        icon: "error",
        title: message,
        showConfirmButton: false,
        timer: 3000,
        toast: true
    });
}


document.addEventListener('DOMContentLoaded', () => {
    loadFiltersFromURL();
    
    // Add event listener for category changes
    const categorySelect = document.getElementById('cat-filter');
    if (categorySelect) {
        categorySelect.addEventListener('change', handleCategoryChange);
    }
    
    fetchFilteredProducts().catch(error => {
        console.error('Initial load error:', error);
        showError('Failed to load products. Please refresh the page.');
    });
});
</script>
<%- include('../layouts/user/footer') %>