<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Kickstop - Login</title>
  <style>
    /* Universal Reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    /* Body Styling */
    body {
      font-family: 'Roboto', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      overflow: hidden;
      background: linear-gradient(135deg, #d4fc79 10%, #96e6a1 90%);
    }

    /* Container Styling */
    .container {
      display: flex;
      width: 90%;
      max-width: 1000px;
      height: 80vh;
      box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.2);
      border-radius: 15px;
      overflow: hidden;
      background-color: rgba(255, 255, 255, 0.8);
    }

    /* Left Side */
    .left-side {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
    }

    .overlay {
      width: 100%;
      height: 100%;
      position: relative;
    }

    .website-name {
      position: absolute;
      top: 20px;
      left: 20px;
      font-size: 3rem;
      font-weight: bold;
      color: #ffffff;
    }

    .shoe-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    /* Right Side */
    .right-side {
      flex: 1;
      padding: 40px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      background-color: white;
      border-radius: 0 15px 15px 0;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .right-side h2 {
      margin-bottom: 1.5rem;
      font-size: 2rem;
      color: #333;
      text-align: center;
    }

    .input-container {
      margin-bottom: 1.2rem;
    }

    .input-container label {
      display: block;
      color: #666;
      margin-bottom: 0.3rem;
      font-size: 0.9rem;
    }

    .input-container input {
      width: 100%;
      padding: 0.8rem;
      border-radius: 5px;
      border: 2px solid #ddd;
      outline: none;
    }

    .login-btn {
      width: 100%;
      padding: 0.8rem;
      border: none;
      border-radius: 5px;
      background: linear-gradient(45deg, #800000, #800000);
      color: #fff;
      font-weight: bold;
      cursor: pointer;
      transition: transform 0.2s ease, background-color 0.3s ease;
    }

    .login-btn:hover {
      transform: scale(1.05);
    }

    p {
      margin-top: 8px;
      font-size: 0.9rem;
      color: #555;
    }

    a {
      color: #007BFF;
      text-decoration: none;
      font-weight: bold;
    }

    a:hover {
      color: #0056b3;
      text-decoration: underline;
    }
    .error-message {
  color: red;
  font-size: 0.8rem;
}

.success-message {
  color: green;
  font-size: 0.9rem;
  font-weight: bold;
}
.is-invalid {
  border-color: red !important;
  box-shadow: 0 0 0 3px rgba(255, 0, 0, 0.2) !important;
  transition: box-shadow 0.2s ease, border-color 0.2s ease;
}
@media (max-width: 768px) {
  .container {
    flex-direction: column;
    height: auto;
  }

  .left-side {
    height: 40vh;
    flex: 0;
  }

  .shoe-image {
    object-fit: contain;
  }

  .website-name {
    font-size: 2rem;
  }

  .right-side {
    flex: 0;
    padding: 20px;
    height: auto;
    border-radius: 0;
  }

  .right-side h2 {
    font-size: 1.5rem;
  }

  .input-container input {
    padding: 0.6rem;
  }

  .login-btn {
    padding: 0.6rem;
    font-size: 0.9rem;
  }
}

  </style>
</head>
<body>
  <div class="container">
    <div class="left-side">
      <div class="overlay">
        <div class="website-name">Kickstop</div>
        <img src="/evara-frontend/assets/imgs/new_images/image2.webp" alt="Shoe Image" class="shoe-image">
      </div>
    </div>

    <div class="right-side">
      <h2>LOGIN</h2>
        <!-- Error Message Area -->
  <% if (typeof errorMessage !== "undefined") { %>
    <p class="error-message"><%= errorMessage %></p>
  <% } %>
      <form id="loginForm" method="post" action="/login" onsubmit="return validateForm();">
        <div class="input-container">
          <label for="email">Email Address</label>
          <input type="email" id="email" name="email">
          <p class="error-message" id="emailError"></p>
        </div>
        <div class="input-container">
          <label for="password">Password</label>
          <input type="password" id="password" name="password">
          <p class="error-message" id="passwordError"></p>
        </div>
        <button type="submit" class="login-btn">Login</button>
        <p id="formError" class="error-message"></p> 
        <p>Don't have an account? <a href="/signup" class="signup-link">Sign up</a></p>
        <p><a href="/forgot-password" class="forgot-password-link">Forgot password?</a></p>
        <p>Only admin access <a href="/admin" class="admin-link">Admin</a></p>
      </form>
    </div>
  </div>
  <script>
function validateForm() {
  const emailInput = document.getElementById("email");
  const passwordInput = document.getElementById("password");
  const emailError = document.getElementById("emailError");
  const passwordError = document.getElementById("passwordError");
  const formError = document.getElementById("formError");

  // Reset errors and classes
  emailError.textContent = "";
  passwordError.textContent = "";
  formError.textContent = "";
  emailInput.classList.remove("is-invalid");
  passwordInput.classList.remove("is-invalid");

  let valid = true;

  // Email validation
  if (!emailInput.value.trim()) {
    emailError.textContent = "Email is required.";
    emailInput.classList.add("is-invalid");
    valid = false;
  } else if (!/\S+@\S+\.\S+/.test(emailInput.value.trim())) {
    emailError.textContent = "Please enter a valid email address.";
    emailInput.classList.add("is-invalid");
    valid = false;
  }

  // Password validation
  if (!passwordInput.value.trim()) {
    passwordError.textContent = "Password is required.";
    passwordInput.classList.add("is-invalid");
    valid = false;
  } else if (passwordInput.value.trim().length < 6) {
    passwordError.textContent = "Password must be at least 6 characters.";
    passwordInput.classList.add("is-invalid");
    valid = false;
  }

  // Form-level error message
  if (!valid) {
    formError.textContent = "Please fix the errors above and try again.";
  }

  return valid; 
}


    document.addEventListener("DOMContentLoaded", () => {
      const gradients = [
        "linear-gradient(135deg, #498560 10%, #96e6a1 90%)",
        "linear-gradient(135deg, #d4fc79 20%, #498560 80%)",
        "linear-gradient(135deg, #96e6a1 15%, #7dcb59 85%)",
        "linear-gradient(135deg, #d4fc79 10%, #3cb371 90%)",
      ];
      let gradientIndex = 0;
      setInterval(() => {
        document.body.style.background = gradients[gradientIndex];
        gradientIndex = (gradientIndex + 1) % gradients.length;
      }, 4000);
    });
  </script>
</body>
</html>
