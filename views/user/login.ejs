<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Kickstop - Login</title>
  <style>
    /* Universal Reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    /* Body Styling */
    body {
      font-family: 'Roboto', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      overflow: hidden;
      background: linear-gradient(135deg, #d4fc79 10%, #96e6a1 90%);
    }

    /* Container Styling */
    .container {
      display: flex;
      width: 90%;
      max-width: 1000px;
      height: 80vh;
      box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.2);
      border-radius: 15px;
      overflow: hidden;
      background-color: rgba(255, 255, 255, 0.8);
    }

    /* Left Side */
    .left-side {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
    }

    .overlay {
      width: 100%;
      height: 100%;
      position: relative;
    }

    .website-name {
      position: absolute;
      top: 20px;
      left: 20px;
      font-size: 3rem;
      font-weight: bold;
      color: #ffffff;
    }

    .shoe-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    /* Right Side */
    .right-side {
      flex: 1;
      padding: 40px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      background-color: white;
      border-radius: 0 15px 15px 0;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .right-side h2 {
      margin-bottom: 1.5rem;
      font-size: 2rem;
      color: #333;
      text-align: center;
    }

    .input-container {
      margin-bottom: 1.2rem;
    }

    .input-container label {
      display: block;
      color: #666;
      margin-bottom: 0.3rem;
      font-size: 0.9rem;
    }

    .input-container input {
      width: 100%;
      padding: 0.8rem;
      border-radius: 5px;
      border: 2px solid #ddd;
      outline: none;
    }

    .login-btn {
      width: 100%;
      padding: 0.8rem;
      border: none;
      border-radius: 5px;
      background: linear-gradient(45deg, #800000, #800000);
      color: #fff;
      font-weight: bold;
      cursor: pointer;
      transition: transform 0.2s ease, background-color 0.3s ease;
    }

    .login-btn:hover {
      transform: scale(1.05);
    }

    p {
      margin-top: 8px;
      font-size: 0.9rem;
      color: #555;
    }

    a {
      color: #007BFF;
      text-decoration: none;
      font-weight: bold;
    }

    a:hover {
      color: #0056b3;
      text-decoration: underline;
    }
    .error-message {
  color: red;
  font-size: 0.8rem;
}

.success-message {
  color: green;
  font-size: 0.9rem;
  font-weight: bold;
}
.is-invalid {
  border-color: red !important;
  box-shadow: 0 0 0 3px rgba(255, 0, 0, 0.2) !important;
  transition: box-shadow 0.2s ease, border-color 0.2s ease;
}
@media (max-width: 768px) {
  .container {
    flex-direction: column;
    height: auto;
  }

  .left-side {
    height: 40vh;
    flex: 0;
  }

  .shoe-image {
    object-fit: contain;
  }

  .website-name {
    font-size: 2rem;
  }

  .right-side {
    flex: 0;
    padding: 20px;
    height: auto;
    border-radius: 0;
  }

  .right-side h2 {
    font-size: 1.5rem;
  }

  .input-container input {
    padding: 0.6rem;
  }

  .login-btn {
    padding: 0.6rem;
    font-size: 0.9rem;
  }
}
   /* Toast Styles */
   #toast-container {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 1000;
}

.toast {
  position: relative;
  background-color: #ffebee;
  color: #d32f2f;
  border: 1px solid #d32f2f;
  border-radius: 5px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  margin-bottom: 10px;
  max-width: 300px;
  opacity: 0;
  padding: 15px;
  padding-right: 30px;
  transform: translateX(100%);
  animation: fadeOut 0.3s ease-in-out forwards;
}
#toast-container {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 1000;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.toast {
  position: relative;
  display: flex;
  align-items: center;
  gap: 10px;
  background: #333;
  color: #fff;
  border-radius: 8px;
  padding: 15px 20px;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.4s ease, transform 0.4s ease;
}

.toast .icon {
  font-size: 24px;
  line-height: 1;
}

.toast .message {
  flex: 1;
  font-size: 14px;
  font-weight: 500;
}

.toast .close-btn {
  background: none;
  border: none;
  color: #fff;
  font-size: 18px;
  cursor: pointer;
  opacity: 0.7;
}

.toast .close-btn:hover {
  opacity: 1;
}

.toast.show {
  opacity: 1;
  transform: translateY(0);
}

.toast.success {
  background: #4caf50;
  color: #fff;
}

.toast.error {
  background: #f44336;
  color: #fff;
}

.toast.warning {
  background: #ff9800;
  color: #fff;
}

.toast.info {
  background: #2196f3;
  color: #fff;
}
/* Button Styling */
.google-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #ffffff;
    border: 2px solid #db4437;
    border-radius: 8px;
    padding: 10px 20px;
    font-size: 16px;
    font-weight: bold;
    color: #555555;
    text-decoration: none;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.google-btn svg {
    margin-right: 10px;
    height: 20px;
    width: 20px;
}

.google-btn:hover {
    background-color: #fbe9e7;
    border-color: #c62828;
    color: #222222;
    box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.2);
}

.google-btn:focus {
    outline: none;
    border-color: #c62828;
    box-shadow: 0px 0px 0px 4px rgba(198, 40, 40, 0.2);
}

  </style>
</head>
<body>
  <div class="container">
    <div class="left-side">
      <div class="overlay">
        <div class="website-name">Kickstop</div>
        <img src="/evara-frontend/assets/imgs/new_images/image2.webp" alt="Shoe Image" class="shoe-image">
      </div>
    </div>

    <div class="right-side">
      <h2>LOGIN</h2>
        <!-- Error Message Area -->
  <% if (typeof errorMessage !== "undefined") { %>
    <p class="error-message"><%= errorMessage %></p>
  <% } %>
      <form id="loginForm" method="post" action="/login" onsubmit="return validateForm();">
        <div class="input-container">
          <label for="email">Email Address</label>
          <input type="email" id="email" name="email">
          <p class="error-message" id="emailError"></p>
        </div>
        <div class="input-container">
          <label for="password">Password</label>
          <input type="password" id="password" name="password">
          <p class="error-message" id="passwordError"></p>
        </div>
        <button type="submit" class="login-btn">Login</button>
        <p id="formError" class="error-message"></p> 
        <div class="social-btns">
          <a href="/auth/google" class="google-btn">
              <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="20px" height="20px" viewBox="-0.5 0 48 48" version="1.1" aria-hidden="true" focusable="false">
                  <title>Google Logo</title>
                  <g stroke="none" fill="none" fill-rule="evenodd">
                      <g transform="translate(-401.000000, -860.000000)">
                          <g transform="translate(401.000000, 860.000000)">
                              <path d="M9.82727273,24 C9.82727273,22.4757333 10.0804318,21.0144 10.5322727,19.6437333 L2.62345455,13.6042667 C1.08206818,16.7338667 0.213636364,20.2602667 0.213636364,24 C0.213636364,27.7365333 1.081,31.2608 2.62025,34.3882667 L10.5247955,28.3370667 C10.0772273,26.9728 9.82727273,25.5168 9.82727273,24" fill="#FBBC05"></path>
                              <path d="M23.7136364,10.1333333 C27.025,10.1333333 30.0159091,11.3066667 32.3659091,13.2266667 L39.2022727,6.4 C35.0363636,2.77333333 29.6954545,0.533333333 23.7136364,0.533333333 C14.4268636,0.533333333 6.44540909,5.84426667 2.62345455,13.6042667 L10.5322727,19.6437333 C12.3545909,14.112 17.5491591,10.1333333 23.7136364,10.1333333" fill="#EB4335"></path>
                              <path d="M23.7136364,37.8666667 C17.5491591,37.8666667 12.3545909,33.888 10.5322727,28.3562667 L2.62345455,34.3946667 C6.44540909,42.1557333 14.4268636,47.4666667 23.7136364,47.4666667 C29.4455,47.4666667 34.9177955,45.4314667 39.0249545,41.6181333 L31.5177727,35.8144 C29.3995682,37.1488 26.7323182,37.8666667 23.7136364,37.8666667" fill="#34A853"></path>
                              <path d="M46.1454545,24 C46.1454545,22.6133333 45.9318182,21.12 45.6113636,19.7333333 L23.7136364,19.7333333 L23.7136364,28.8 L36.3181818,28.8 C35.6879545,31.8912 33.9724545,34.2677333 31.5177727,35.8144 L39.0249545,41.6181333 C43.3393409,37.6138667 46.1454545,31.6490667 46.1454545,24" fill="#4285F4"></path>
                          </g>
                      </g>
                  </g>
              </svg>
              <span>Continue with Google</span>
          </a>
      </div>
      
        <p>Don't have an account? <a href="/signup" class="signup-link">Sign up</a></p>
        <p><a href="/forgot-password" class="forgot-password-link">Forgot password?</a></p>
        <p>Only admin access <a href="/admin" class="admin-link">Admin</a></p>
      </form>
    </div>
  </div>
  <script>
    function showToast(message, type = "info") {
      const toastContainer = document.getElementById("toast-container") || createToastContainer();
      const toast = document.createElement("div");
      toast.classList.add("toast", type);

      const icon = document.createElement("span");
      icon.classList.add("icon");
      icon.innerHTML = getIcon(type);

      const messageEl = document.createElement("span");
      messageEl.classList.add("message");
      messageEl.textContent = message;

      const closeBtn = document.createElement("button");
      closeBtn.classList.add("close-btn");
      closeBtn.innerHTML = "&times;";
      closeBtn.onclick = () => removeToast(toast);

      toast.appendChild(icon);
      toast.appendChild(messageEl);
      toast.appendChild(closeBtn);
      toastContainer.appendChild(toast);

      requestAnimationFrame(() => {
        toast.classList.add("show");
      });

      setTimeout(() => removeToast(toast), 4000);
    }

    function createToastContainer() {
      const container = document.createElement("div");
      container.id = "toast-container";
      document.body.appendChild(container);
      return container;
    }

    function removeToast(toast) {
      toast.classList.remove("show");
      setTimeout(() => {
        if (toast.parentNode) toast.parentNode.removeChild(toast);
      }, 400);
    }

    function getIcon(type) {
      switch (type) {
        case "success":
          return "✔";
        case "error":
          return "✖";
        case "warning":
          return "⚠";
        case "info":
        default:
          return "ℹ";
      }
    }

    function validateForm() {
      const emailInput = document.getElementById("email");
      const passwordInput = document.getElementById("password");
      const emailError = document.getElementById("emailError");
      const passwordError = document.getElementById("passwordError");
      const formError = document.getElementById("formError");

      emailError.textContent = "";
      passwordError.textContent = "";
      formError.textContent = "";
      emailInput.classList.remove("is-invalid");
      passwordInput.classList.remove("is-invalid");

      let valid = true;

      if (!emailInput.value.trim()) {
        emailError.textContent = "Email is required.";
        emailInput.classList.add("is-invalid");
        valid = false;
      } else if (!/\S+@\S+\.\S+/.test(emailInput.value.trim())) {
        emailError.textContent = "Please enter a valid email address.";
        emailInput.classList.add("is-invalid");
        valid = false;
      }

      if (!passwordInput.value.trim()) {
        passwordError.textContent = "Password is required.";
        passwordInput.classList.add("is-invalid");
        valid = false;
      } else if (passwordInput.value.trim().length < 6) {
        passwordError.textContent = "Password must be at least 6 characters.";
        passwordInput.classList.add("is-invalid");
        valid = false;
      }

      if (!valid) {
        formError.textContent = "Please fix the errors above and try again.";
        showToast("Please correct the form errors", "error");
      } else {
        showToast("Form submitted successfully!", "success");
      }

      return valid;
    }

    document.addEventListener("DOMContentLoaded", () => {
      const gradients = [
    "linear-gradient(135deg, #ffffff 10%, #f7f7f7 90%)",     
    "linear-gradient(135deg, #ffffff 20%, #eaeaea 80%)",      
    "linear-gradient(135deg, #ffffff 15%, #f4f4f4 85%)",      
    "linear-gradient(135deg, #ffffff 10%, #ededed 90%)",      
    "linear-gradient(135deg, #ffffff 25%, #f9f9f9 75%)",      
    "linear-gradient(135deg, #ffffff 20%, #f0f0f0 80%)",      
    "linear-gradient(135deg, #ffffff 10%, #fcfcfc 50%, #f7f7f7 90%)", 
    "linear-gradient(135deg, #ffffff 20%, #f2f2f2 80%)",      
    "linear-gradient(135deg, #ffffff 15%, #ebebeb 85%)",      
    "linear-gradient(135deg, #ffffff 10%, #e5e5e5 90%)"      
];

      let gradientIndex = 0;
      setInterval(() => {
        document.body.style.background = gradients[gradientIndex];
        gradientIndex = (gradientIndex + 1) % gradients.length;
      }, 4000);
    });
  </script>
</body>
</html>
