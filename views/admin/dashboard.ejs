<%- include('../layouts/admin/header') %>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">

<style>
    :root {
        --primary-color: #800000;
        --secondary-color: #400000;
        --accent-color: #ff8c00;
    }

    body {
        background-color: #f8f8f8;
        font-family: 'Inter', sans-serif;
        color: #333;
    }

    .content-main {
        padding-top: 2rem;
    }

    .card {
        border-radius: 15px;
        transition: all 0.3s ease;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
    }

    .card-header {
        background-color: var(--primary-color);
        color: white;
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-primary:hover {
        background-color: var(--secondary-color);
        border-color: var(--secondary-color);
    }

    .stats-icon {
        font-size: 2.5rem;
        background-color: var(--primary-color);
        color: white;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
    }
    .mywebsite {
    color: #800000;
    text-decoration: none;
    font-family: Arial, sans-serif;
    font-weight: bold;
    padding: 8px 12px;
    border-radius: 5px;
    transition: background-color 0.3s, color 0.3s;
}

.mywebsite:hover {
    color: #990000;
}

    .stats-card {
        transition: all 0.3s ease;
    }

    .stats-card:hover {
        background-color: var(--primary-color);
        color: white;
    }

    .stats-card:hover .stats-icon {
        background-color: white;
        color: var(--primary-color);
    }

    #mainChart, #productsChart, #categoriesChart, #brandsChart {
        animation: fadeIn 1s ease-out;
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>
    <section class="content-main">
<div class="container-fluid p-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="mywebsite h2 mb-0">KickStop Dashboard</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/admin">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="row g-4 mb-4">
        <div class="col-md-4">
            <div class="card border-0 shadow-sm overflow-hidden">
                <div class="card-body d-flex align-items-center">
                    <div class="bg-primary text-white p-3 rounded me-3">
                        <i class="bi bi-cash-stack fs-3"></i>
                    </div>
                    <div>
                        <h6 class="text-muted mb-1">Total Revenue</h6>
                        <h4 class="mywebsite mb-0">₹<%= salesData.totalSalesAmount.toLocaleString() %></h4>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-sm overflow-hidden">
                <div class="card-body d-flex align-items-center">
                    <div class="bg-success text-white p-3 rounded me-3">
                        <i class="bi bi-cart-check fs-3"></i>
                    </div>
                    <div>
                        <h6 class="text-muted mb-1">Total Orders</h6>
                        <h4 class="mywebsite mb-0"><%= count %></h4>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-sm overflow-hidden">
                <div class="card-body d-flex align-items-center">
                    <div class="bg-warning text-white p-3 rounded me-3">
                        <i class="bi bi-graph-up fs-3"></i>
                    </div>
                    <div>
                        <h6 class="text-muted mb-1">Average Order Value</h6>
                        <h4 class="mywebsite mb-0">₹<%= (salesData.totalSalesAmount / count || 0).toFixed(2) %></h4>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Sales Charts -->
    <div class="row g-4 mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mywebsite mb-0">Sales Overview</h5>
                        <select class="form-select form-select-sm w-auto" id="timeFilter">
                            <option value="weekly">Weekly</option>
                            <option value="monthly" selected>Monthly</option>
                            <option value="yearly">Yearly</option>
                        </select>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="mainChart" height="400"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Product & Category Analysis -->
    <div class="row g-4">
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="mywebsite mb-0">Top Selling Products</h5>
                </div>
                <div class="card-body">
                    <canvas id="productsChart" height="300"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="mywebsite mb-0">Category Distribution</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <canvas id="categoriesChart" height="300"></canvas>
                        </div>
                        <div class="col-md-6 d-flex align-items-center">
                            <ul class="list-unstyled" id="categoryLegend"></ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Brand Analysis -->
    <div class="row g-4 mt-2">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="mywebsite mb-0">Top Selling Brands</h5>
                </div>
                <div class="card-body">
                    <canvas id="brandsChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
       document.addEventListener('DOMContentLoaded', function () {
            const productsData = JSON.parse('<%- JSON.stringify(products) %>');
            const categoriesData = JSON.parse('<%- JSON.stringify(categories) %>');
            const brandsData = JSON.parse('<%- JSON.stringify(brands) %>');
            const salesData = JSON.parse('<%-JSON.stringify(salesData)%>');

           
            const mainChartCtx = document.getElementById('mainChart');
        if (mainChartCtx) {
            const mainChart = new Chart(mainChartCtx, {
                type: 'line',
                data: {
                    labels: salesData.monthly.labels,
                    datasets: [
                        {
                            label: 'Monthly Sales',
                            data: salesData.monthly.data,
                            borderColor: 'rgba(128, 0, 0, 1)', 
                            backgroundColor: 'rgba(128, 0, 0, 0.2)', 
                            tension: 0.4,
                            fill: true
                        },
                        {
                            label: 'Weekly Sales',
                            data: salesData.weekly.data,
                            borderColor: 'rgba(220, 20, 60, 1)', 
                            backgroundColor: 'rgba(220, 20, 60, 0.2)',
                            tension: 0.4,
                            fill: true,
                            hidden: true
                        },
                        {
                            label: 'Yearly Sales',
                            data: salesData.yearly.data,
                            borderColor: 'rgba(255, 140, 0, 1)', 
                            backgroundColor: 'rgba(255, 140, 0, 0.2)',
                            tension: 0.4,
                            fill: true,
                            hidden: true
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false, 
                    layout: {
                        padding: {
                            top: 10,
                            bottom: 10
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            min: 0,
                            max: 60000,
                            ticks: {
                                stepSize: 3000,
                                callback: (value) => `₹${value.toLocaleString()}`
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `${context.dataset.label}: ₹${context.parsed.y.toLocaleString()}`;
                                }
                            }
                        }
                    }
                }
            });

                document.getElementById('timeFilter').addEventListener('change', function (e) {
                const timeFrame = e.target.value;
                
                mainChart.data.datasets.forEach((dataset, index) => {
                    mainChart.data.datasets[index].hidden = true;
                });

                switch(timeFrame) {
                    case 'weekly':
                        mainChart.data.labels = salesData.weekly.labels;
                        mainChart.data.datasets[1].hidden = false;
                        break;
                    case 'monthly':
                        mainChart.data.labels = salesData.monthly.labels;
                        mainChart.data.datasets[0].hidden = false;
                        break;
                    case 'yearly':
                        mainChart.data.labels = salesData.yearly.labels;
                        mainChart.data.datasets[2].hidden = false;
                        break;
                }
                
                mainChart.update();
            });
        }

    // Products Chart
    const productsChartCtx = document.getElementById("productsChart");
    if (productsChartCtx) {
        new Chart(productsChartCtx, {
            type: "bar",
            data: {
                labels: productsData.map(item => item.productName || 'Unknown'),
                datasets: [{
                    label: "Quantity Sold",
                    data: productsData.map(item => item.totalQuantitySold),
                    backgroundColor: "rgba(128, 0, 0, 2.6)",

                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    }

    // Categories Chart with Dynamic Legend
    const categoriesChartCtx = document.getElementById("categoriesChart");
    const categoryLegendContainer = document.getElementById("categoryLegend");
    if (categoriesChartCtx) {
        const categoriesChart = new Chart(categoriesChartCtx, {
            type: "pie",
            data: {
                labels: categoriesData.map(item => item.categoryName || 'Unknown'),
                datasets: [{
                    data: categoriesData.map(item => item.totalQuantitySold),
                    backgroundColor: [
                    '#800000',
                    '#B22222',
                    '#CD5C5C',
                    '#FF7F50',
                    '#FF4500',
                    '#DA70D6',
                ],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false }
                }
            }
        });

        // Custom Legend
        categoriesChart.data.labels.forEach((label, index) => {
            const li = document.createElement('li');
            li.innerHTML = `
                <span class="badge me-2" style="background-color: ${categoriesChart.data.datasets[0].backgroundColor[index]}">
                    ${label}
                </span>
                ${categoriesChart.data.datasets[0].data[index].toLocaleString()}
            `;
            categoryLegendContainer.appendChild(li);
        });
    }

    // Brands Chart
    const brandsChartCtx = document.getElementById("brandsChart");
    new Chart(brandsChartCtx, {
    type: "bar",
    data: {
        labels: brandsData.map(item => item._id || 'Unknown Brand'),
        datasets: [{
            label: "Total Sold",
            data: brandsData.map(item => item.totalQuantitySold),
            backgroundColor: "rgba(128, 0, 0, 6.6)",
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: { beginAtZero: true }
        }
    }
});
    });

    </script>

    <%- include('../layouts/admin/footer') %>