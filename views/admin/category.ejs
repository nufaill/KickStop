
<%- include('../layouts/admin/header') %>
<style>
    /* General Styles */
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
    }
    
    /* Buttons */
    .btn-primary,
    .btn-info {
        background-color: #800000;
        border: none;
        color: white;
    }
    .btn-primary:hover,
    .btn-info:hover {
        background-color: #5a0000;
    }
    
    /* Badges */
    .badge.alert-success {
        background-color: #800000;
        color: #fff;
    }
    .badge.alert-danger {
        background-color: #d9534f;
        color: #fff;
    }
    
    /* Table Header */
    table thead {
        background-color: #800000;
        color: white;
    }
    
    /* Pagination */
    .pagination .page-link {
        color: #800000;
        border: 1px solid #800000;
    }
    .pagination .page-link.active {
        background-color: #800000;
        border-color: #800000;
        color: white;
    }
    
    /* Other Styles */
    .text-white {
        color: white;
    }
    </style>
    
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Categories </h2>
                    <p>Add, edit or delete a category</p>
                </div>
                <div>
                    <input type="text" placeholder="Search Categories" class="form-control bg-white">
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <form action="" method="post" onsubmit="return handleFormSubmit(event);">
                                <div class="mb-4">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" placeholder="Type here" class="form-control" id="name" />
                                    <small id="nameError" style="color: red; display: none;">Name is required</small>
                                </div>
                                
                                <div class="mb-4">
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" class="form-control" id="description"></textarea>
                                    <small id="descriptionError" style="color: red; display: none;">Description can't be empty</small>
                                </div>
                                <div class="d-grid">
                                    <button class="btn btn-primary" type="submit">Create category</button>
                                </div>
                            </form>
                            
                        </div>
                        <div class="col-md-9">
                            <div>
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Description</th>
                                            <th>Offer</th>
                                            <th></th>
                                            <th>status</th>
                                            <th></th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <%cat.reverse().forEach((category,index)=>{%>
                                            <tr>
                                                <td><%= category.name%></td>
                                                <td><%= category.description%></td>
                                                <td>
                                                    <%if(category.categoryOffer){%>
                                                        <%= category.categoryOffer%>%
                                                    <%}else{%>
                                                        0%
                                                    <%}%>
                                                </td>
                                                <td class="text-end">
                                                    <% if (category.categoryOffer === 0) { %>
                                                        <button class="btn btn-info btn-equal" style="width: 150px;">
                                                            <a href="#" class="text-white d-block text-center" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                                                        </button>
                                                    <% } else { %>
                                                        <button class="btn btn-info btn-equal" style="width: 150px;">
                                                            <a href="#" class="text-white d-block text-center" onclick="removeOffer('<%= category._id %>')">Remove Offer</a>
                                                        </button>
                                                    <% } %>
                                                </td>
                                                <td>
                                                    <%if(category.isListed){%>
                                                        <span class="badge rounded-pill alert-success">Listed</span>
                                                    <%}else{%>
                                                        <span class="badge rounded-pill alert-danger">Unlisted</span>
                                                    <%}%>
                                                </td>
                                                <td>
                                                   <%if(category.isListed){%>
                                                    <button class="btn btn-danger" style="background-color: #591d1d;">
                                                        <a href="/admin/listcategory?id=<%=category._id%>" class="text-white">Unlist</a>
                                                    </button>
                                                   <%} else {%>
                                                    <button class="btn btn-success"  style="background-color: #4e1515;">
                                                        <a href="/admin/unlistcategory?id=<%=category._id%>" class="text-white">List</a>
                                                    </button>
                                                   <%}%>
                                                </td>
                                                <td class="text-start">
                                                    <a href="/admin/editcategory?id=<%=category._id%>" class="btn btn-info text-white">Edit</a>
                                                </td>
                                                
                                                
                                            </tr>
                                        <%})%>
                                        
                                        
                                    </tbody>
                                </table>
                            </div>
                        </div> 
                    </div> 
                </div> 
            </div> 
        </section> 
        <div class="pagination-area mt-30 mb-50">
            <nav aria-label="Page navigation example justify-content-center">
                <ul class="pagination justify-content-center">
                    <%for(let i=1;i<=totalPages;i++){%>
                        <li class="page-item">
                            <a class="page-link <%= (i===currentPage) ? 'active' : '' %>" href="?page=<%=i%>"><%=i%></a>
                        </li>
                    <%}%>
                </ul>
            </nav>
        </div>
          <br>
      
<script>

function handleFormSubmit(event) {
    event.preventDefault();
    if (!validateForm()) {
        return;
    }

    const nameInput = document.getElementById('name');
    const descriptionInput = document.getElementById('description');
    const name = nameInput.value;
    const description = descriptionInput.value;

    // Reset any previous error styling
    nameInput.classList.remove('is-invalid');
    
    fetch('/admin/addcategory', {
        method: 'POST',
        headers: {
            'content-type': 'application/json',
        },
        body: JSON.stringify({ name, description })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error || 'Failed to add category');
            });
        }
        return response.json();
    })
    .then(data => {
        Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Category added successfully',
            timer: 1500
        }).then(() => {
            location.reload();
        });
    })
    .catch(error => {
        if (error.message === 'Category already exists') {
            // Add visual feedback
            nameInput.classList.add('is-invalid');
            
            Swal.fire({
                icon: 'error',
                title: 'Category Already Exists',
                text: 'Please choose a different category name',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Ok, I\'ll try another name'
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An error occurred while adding the category',
                confirmButtonColor: '#3085d6'
            });
        }
    });
}

function validateForm() {
    const name = document.getElementById("name").value;
    const description = document.getElementById("description").value;
    let isValid = true;

    // Reset previous error states
    document.getElementById("nameError").style.display = "none";
    document.getElementById("descriptionError").style.display = "none";
    
    // Remove any previous invalid class
    document.getElementById("name").classList.remove('is-invalid');
    document.getElementById("description").classList.remove('is-invalid');

    // Name validation: Required and minimum length
    if (name.trim() === "") {
        document.getElementById("nameError").style.display = "inline";
        document.getElementById("name").classList.add('is-invalid');
        isValid = false;
    }

    // Description validation
    if (description.trim().length < 1) {
        document.getElementById("descriptionError").style.display = "inline";
        document.getElementById("description").classList.add('is-invalid');
        isValid = false;
    }

    return isValid;
}

async function addOffer(categoryId) {
    const {value: amount} = await Swal.fire({
        title: 'Offer in percentage',
        input: 'number',
        inputLabel: 'Percentage',
        inputPlaceholder: "%"
    });

    if (amount) {
        if (amount < 1 || amount > 99) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Offer Percentage',
                text: 'Offer percentage must be between 1 and 99.',
                confirmButtonColor: '#3085d6'
            });
            return;  
        }

        try {
            const response = await fetch('/admin/addcategoryoffer', {
                method: "POST",
                headers: {
                    'content-type': "application/json"
                },
                body: JSON.stringify({
                    percentage: amount,
                    categoryId: categoryId,
                })
            });

            const data = await response.json();
            if (response.ok && data.status === true) {
                Swal.fire(
                    "Offer added",
                    "The offer has been added",
                    "success"
                ).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire("Failed", data.message || "Adding offer failed", "error");
            }

        } catch (error) {
            Swal.fire(
                "Error",
                "An error occurred while adding the offer",
                "error"
            );

            console.log("Error adding offer", error);
        }
    }
}


async function removeOffer(categoryId) {
    try {
        
        const response = await fetch('/admin/removecategoryoffer',{
                method:"POST",
                headers:{
                    'content-type':"application/json"
                },
                body:JSON.stringify({
                    categoryId:categoryId
                })
            })

            const data = await response.json()

            if(response.ok && data.status === true){
                Swal.fire(
                    "Offer removed",
                    "The offer has been removed",
                    "success"
                ).then(()=>{
                    location.reload();
                })
            }else{
                Swal.fire(
                    "Failed",
                    data.message || "Removing offer failed",
                    "error"
                )
            }

    } catch (error) {
        Swal.fire(
            "Error",
            "An error occured while removing the offer",
            "error"
        )
        console.error("Error removing offer", error)
    }
}

document.querySelector('.some-element').style.backgroundColor = '#800000';
</script>
<%- include('../layouts/admin/footer') %> 
